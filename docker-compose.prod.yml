services:
  db:
    image: postgres:16.2-alpine
    env_file: ./backend/.env.production
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    ports:
      - "5434:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M

  app-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env.production
    depends_on:
      - db
    ports:
      - "8000:8000"
    restart: always
    environment:
      - DISABLE_DOCS=1
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M

  app-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: ./frontend/.env.production
    ports:
      - "3000:3000"
    restart: always
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M

volumes:
  db_data:
